{"version":3,"sources":["features/todos/todosSlice.js","components/TodoItem.jsx","components/TodosList.jsx","components/TodoFilter.jsx","components/TodoApp.jsx","store.js","api/localStorage.js","App.jsx","index.js"],"names":["todosSlice","createSlice","name","initialState","todos","reducers","addTodo","state","action","newTodo","payload","push","changeTodoStatus","todoId","todoToChange","find","todo","id","completed","changeTodoTitle","title","changeAllTodosStatus","some","map","deleteTodo","filter","actions","TodoItem","dispatch","useDispatch","useState","editing","setEditing","setTitle","inputEl","useRef","escFunction","useCallback","event","keyCode","current","blur","className","classNames","type","checked","onChange","onDoubleClick","target","document","addEventListener","requestAnimationFrame","focus","onClick","ref","value","onBlur","trim","length","removeEventListener","onKeyPress","key","TodosList","FILTERS","TodoFilter","useSelector","path","element","to","TodoApp","newTodoTitle","setNewTodoTitle","notCompletedTodos","onSubmit","Date","placeholder","hidden","htmlFor","isActive","selected","every","forEach","store","configureStore","reducer","todosReducer","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadTodos","subscribe","debounce","stringify","setItem","saveTodos","getState","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c3d629c7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  todos: [],\n};\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = action.payload;\n\n      // eslint-disable-next-line no-param-reassign\n      state.todos.push(newTodo);\n    },\n\n    changeTodoStatus: (state, action) => {\n      const todoId = action.payload;\n      const todoToChange = state.todos.find(todo => todo.id === todoId);\n\n      todoToChange.completed = !todoToChange.completed;\n    },\n\n    changeTodoTitle: (state, action) => {\n      const todoToChange = action.payload;\n      const todoForUpdate\n        = state.todos.find(todo => todo.id === todoToChange.id);\n\n      todoForUpdate.title = todoToChange.title;\n    },\n\n    changeAllTodosStatus: (state) => {\n      if (state.todos.some(todo => todo.completed === false)) {\n        // eslint-disable-next-line no-param-reassign\n        state.todos = state.todos.map(todo => ({ ...todo, completed: true }));\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        state.todos = state.todos.map(todo => (\n          { ...todo, completed: !todo.completed }\n        ));\n      }\n    },\n\n    deleteTodo: (state, action) => {\n      const todoId = action.payload;\n\n      // eslint-disable-next-line no-param-reassign\n      state.todos = state.todos.filter(todo => todo.id !== todoId);\n    },\n  },\n\n});\n\nexport const {\n  addTodo,\n  deleteTodo,\n  changeTodoStatus,\n  changeTodoTitle,\n  changeAllTodosStatus,\n} = todosSlice.actions;\n\nexport default todosSlice.reducer;\n","import React, { useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport {\n  changeTodoStatus,\n  changeTodoTitle,\n  deleteTodo,\n} from '../features/todos/todosSlice';\n\nconst TodoItem = ({ todo }) => {\n  const dispatch = useDispatch();\n\n  const [editing, setEditing] = useState(false);\n  const [title, setTitle] = useState(todo.title);\n  const inputEl = useRef(null);\n\n  const handleDelete = () => {\n    dispatch(deleteTodo(todo.id));\n  };\n\n  const handleChangeStatus = () => {\n    dispatch(changeTodoStatus(todo.id));\n  };\n\n  const escFunction = useCallback((event) => {\n    if (event.keyCode === 27) {\n      setTitle(todo.title);\n      inputEl.current?.blur();\n    }\n  }, [todo]);\n\n  const handleEditTodoTitle = (target) => {\n    setEditing(true);\n    document.addEventListener('keyup', escFunction);\n    requestAnimationFrame(() => {\n      inputEl.current?.focus();\n    });\n  };\n\n  const onBlurInput = () => {\n    if (title.trim().length) {\n      dispatch(changeTodoTitle({ id: todo.id, title }));\n    } else {\n      dispatch(deleteTodo(todo.id));\n    }\n\n    setEditing(false);\n    document.removeEventListener('keyup', escFunction);\n  };\n\n  const handleEnterPress = (event) => {\n    if (event.key === 'Enter') {\n      inputEl.current?.blur();\n    }\n  };\n\n  return (\n    <li\n      className={classNames(\n        'todo-item',\n        { completed: todo.completed === true },\n        { editing },\n      )}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={handleChangeStatus}\n        />\n        <label\n          onDoubleClick={event => handleEditTodoTitle(event.target)}\n        >\n          {todo.title}\n        </label>\n        <button type=\"button\" className=\"destroy\" onClick={handleDelete} />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        id=\"editTodo\"\n        ref={inputEl}\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        onBlur={onBlurInput}\n        onKeyPress={handleEnterPress}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodosList = ({ todos }) => (\n  <>\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </ul>\n  </>\n);\n\nexport default TodosList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport TodosList from './TodosList';\n\nconst FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n\nconst TodoFilter = () => {\n  const { todos } = useSelector(state => state.todos);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TodosList todos={todos} />} />\n      <Route path={FILTERS.all} element={<Navigate to=\"/\" />} />\n      <Route\n        path={FILTERS.active}\n        element={<TodosList todos={todos.filter(todo => !todo.completed)} />}\n      />\n      <Route\n        path={FILTERS.completed}\n        element={<TodosList todos={todos.filter(todo => todo.completed)} />}\n      />\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\n    </Routes>\n  );\n};\n\nexport default TodoFilter;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n  addTodo,\n  changeAllTodosStatus,\n  deleteTodo,\n} from '../features/todos/todosSlice';\n\nimport TodoFilter from './TodoFilter';\n\nconst TodoApp = () => {\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const { todos } = useSelector(state => state.todos);\n  const dispatch = useDispatch();\n  const notCompletedTodos = todos.filter(todo => todo.completed === false);\n\n  const handleSubmit = () => {\n    if (!newTodoTitle.trim('').length) {\n      return;\n    }\n\n    const newTodo = {\n      id: +new Date(),\n      title: newTodoTitle,\n      completed: false,\n    };\n\n    dispatch(addTodo(newTodo));\n    setNewTodoTitle('');\n  };\n\n  const handleToggleAllTodosStatus = () => {\n    dispatch(changeAllTodosStatus());\n  };\n\n  const handleClearCompletedToods = () => {\n    const completedTodos = todos.filter(todo => todo.completed === true);\n\n    completedTodos.forEach(todo => dispatch(deleteTodo(todo.id)));\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodoTitle}\n            onChange={event => setNewTodoTitle(event.target.value)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={todos.some(todo => todo.completed === false)}\n          onClick={handleToggleAllTodosStatus}\n        />\n        <label\n          hidden={todos.length === 0}\n          htmlFor=\"toggle-all\"\n        >\n          Mark all as complete\n        </label>\n        <TodoFilter />\n      </section>\n\n      {todos.length !== 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${notCompletedTodos.length} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <NavLink\n                to=\"/\"\n                className={({ isActive }) => classNames({ selected: isActive })}\n              >\n                All\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink\n                to=\"/active\"\n                className={({ isActive }) => classNames({ selected: isActive })}\n              >\n                Active\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink\n                to=\"/completed\"\n                className={({ isActive }) => classNames({ selected: isActive })}\n              >\n                Completed\n              </NavLink>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            hidden={todos.every(todo => todo.completed === false)}\n            onClick={handleClearCompletedToods}\n          >\n            Clear completed\n          </button>\n        </footer>\n      )}\n    </>\n  );\n};\n\nexport default TodoApp;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { loadTodos } from './api/localStorage';\nimport todosReducer from './features/todos/todosSlice';\n\nexport const store = configureStore({\n  reducer: {\n    todos: todosReducer,\n  },\n  preloadedState: loadTodos(),\n});\n","export const loadTodos = () => {\n  try {\n    const serializedState = localStorage.getItem('todos');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveTodos = (todos) => {\n  try {\n    const serializedState = JSON.stringify(todos);\n\n    localStorage.setItem('todos', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport TodoApp from './components/TodoApp';\n\nimport { saveTodos } from './api/localStorage';\nimport { store } from './store';\n\nstore.subscribe(\n  debounce(() => {\n    saveTodos(store.getState());\n  }, 800),\n);\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}